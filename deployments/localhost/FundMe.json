{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x371f496955e4b073519f4e359901e8d20908906d9f5b179fd3d9433ba359d23d",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "892093",
    "logsBloom": "0x
    "blockHash": "0xd889967ed43db73f6165edf32b638f8879e7ed0e226aadce3ff56b32a8374940",
    "transactionHash": "0x371f496955e4b073519f4e359901e8d20908906d9f5b179fd3d9433ba359d23d",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "892093",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "b7d74da0277801ec6ab77ed69b03805b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.8;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MINIMUM_USD = 5 * 10**18;\\n\\n    address[] private s_funders;\\n\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n\\n    address private immutable i_owner;\\n\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) {\\n            revert FundMe__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"Didn't send enough\\\"\\n        );\\n        s_funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        address[] memory funders = s_funders;\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool callSuccess, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x8096c635da5a404ade03e6403751b5baee6b63ff44795ffdfc77445133efaf2e\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.8;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n    function getPrice(AggregatorV3Interface priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\r\\n        //ETH in terms of usd - 8 decimals\\r\\n        return uint256(price * 1e10);\\r\\n    }\\r\\n\\r\\n    function getConversionRate(\\r\\n        uint256 ethAmount,\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xd740382c9d7a4bcab21c131803fae76669afb2a42a2b34f2969fffe0d7d101f0\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051620010323803806200103283398181016040528101906100349190610115565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610142565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e2826100b7565b9050919050565b6100f2816100d7565b81146100fd57600080fd5b50565b60008151905061010f816100e9565b92915050565b60006020828403121561012b5761012a6100b2565b5b600061013984828501610100565b91505092915050565b60805160601c610ec36200016f600039600081816101dc015281816103d201526104ae0152610ec36000f3fe6080604052600436106100705760003560e01c8063893d20e81161004e578063893d20e8146100f45780639e87a5cd1461011f578063b60d42881461014a578063d7b4750c1461015457610070565b80630343fb25146100755780633ccfd60b146100b25780636b69a592146100c9575b600080fd5b34801561008157600080fd5b5061009c60048036038101906100979190610851565b610191565b6040516100a99190610897565b60405180910390f35b3480156100be57600080fd5b506100c76101da565b005b3480156100d557600080fd5b506100de61049e565b6040516100eb9190610897565b60405180910390f35b34801561010057600080fd5b506101096104aa565b60405161011691906108c1565b60405180910390f35b34801561012b57600080fd5b506101346104d2565b604051610141919061093b565b60405180910390f35b6101526104fc565b005b34801561016057600080fd5b5061017b60048036038101906101769190610982565b610624565b60405161018891906108c1565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461025f576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156102e257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610298575b5050505050905060005b815181101561036d57600082828151811061030a576103096109af565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061036590610a0d565b9150506102ec565b50600067ffffffffffffffff81111561038957610388610a56565b5b6040519080825280602002602001820160405280156103b75781602001602082028036833780820191505090505b50600090805190602001906103cd929190610747565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161041490610ab6565b60006040518083038185875af1925050503d8060008114610451576040519150601f19603f3d011682016040523d82523d6000602084013e610456565b606091505b505090508061049a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049190610b28565b60405180910390fd5b5050565b674563918244f4000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b674563918244f4000061053a600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461066b90919063ffffffff16565b101561057b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290610b94565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000808281548110610639576106386109af565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080610677836106a7565b90506000670de0b6b3a764000085836106909190610bb4565b61069a9190610c3d565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106f057600080fd5b505afa158015610704573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107289190610cfb565b5050509150506402540be4008161073f9190610d76565b915050919050565b8280548282559060005260206000209081019282156107c0579160200282015b828111156107bf5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610767565b5b5090506107cd91906107d1565b5090565b5b808211156107ea5760008160009055506001016107d2565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061081e826107f3565b9050919050565b61082e81610813565b811461083957600080fd5b50565b60008135905061084b81610825565b92915050565b600060208284031215610867576108666107ee565b5b60006108758482850161083c565b91505092915050565b6000819050919050565b6108918161087e565b82525050565b60006020820190506108ac6000830184610888565b92915050565b6108bb81610813565b82525050565b60006020820190506108d660008301846108b2565b92915050565b6000819050919050565b60006109016108fc6108f7846107f3565b6108dc565b6107f3565b9050919050565b6000610913826108e6565b9050919050565b600061092582610908565b9050919050565b6109358161091a565b82525050565b6000602082019050610950600083018461092c565b92915050565b61095f8161087e565b811461096a57600080fd5b50565b60008135905061097c81610956565b92915050565b600060208284031215610998576109976107ee565b5b60006109a68482850161096d565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a188261087e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a4b57610a4a6109de565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610aa0600083610a85565b9150610aab82610a90565b600082019050919050565b6000610ac182610a93565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b12600b83610acb565b9150610b1d82610adc565b602082019050919050565b60006020820190508181036000830152610b4181610b05565b9050919050565b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b6000610b7e601283610acb565b9150610b8982610b48565b602082019050919050565b60006020820190508181036000830152610bad81610b71565b9050919050565b6000610bbf8261087e565b9150610bca8361087e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c0357610c026109de565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c488261087e565b9150610c538361087e565b925082610c6357610c62610c0e565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c8d81610c6e565b8114610c9857600080fd5b50565b600081519050610caa81610c84565b92915050565b6000819050919050565b610cc381610cb0565b8114610cce57600080fd5b50565b600081519050610ce081610cba565b92915050565b600081519050610cf581610956565b92915050565b600080600080600060a08688031215610d1757610d166107ee565b5b6000610d2588828901610c9b565b9550506020610d3688828901610cd1565b9450506040610d4788828901610ce6565b9350506060610d5888828901610ce6565b9250506080610d6988828901610c9b565b9150509295509295909350565b6000610d8182610cb0565b9150610d8c83610cb0565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610dcb57610dca6109de565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e0857610e076109de565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e4557610e446109de565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e8257610e816109de565b5b82820290509291505056fea26469706673582212205515c893f0fe4661bfac7e601b6f8eac9e0f6500fe2ef0ab585d45ab98bfaae564736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c8063893d20e81161004e578063893d20e8146100f45780639e87a5cd1461011f578063b60d42881461014a578063d7b4750c1461015457610070565b80630343fb25146100755780633ccfd60b146100b25780636b69a592146100c9575b600080fd5b34801561008157600080fd5b5061009c60048036038101906100979190610851565b610191565b6040516100a99190610897565b60405180910390f35b3480156100be57600080fd5b506100c76101da565b005b3480156100d557600080fd5b506100de61049e565b6040516100eb9190610897565b60405180910390f35b34801561010057600080fd5b506101096104aa565b60405161011691906108c1565b60405180910390f35b34801561012b57600080fd5b506101346104d2565b604051610141919061093b565b60405180910390f35b6101526104fc565b005b34801561016057600080fd5b5061017b60048036038101906101769190610982565b610624565b60405161018891906108c1565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461025f576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156102e257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610298575b5050505050905060005b815181101561036d57600082828151811061030a576103096109af565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061036590610a0d565b9150506102ec565b50600067ffffffffffffffff81111561038957610388610a56565b5b6040519080825280602002602001820160405280156103b75781602001602082028036833780820191505090505b50600090805190602001906103cd929190610747565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161041490610ab6565b60006040518083038185875af1925050503d8060008114610451576040519150601f19603f3d011682016040523d82523d6000602084013e610456565b606091505b505090508061049a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049190610b28565b60405180910390fd5b5050565b674563918244f4000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b674563918244f4000061053a600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461066b90919063ffffffff16565b101561057b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290610b94565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000808281548110610639576106386109af565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080610677836106a7565b90506000670de0b6b3a764000085836106909190610bb4565b61069a9190610c3d565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106f057600080fd5b505afa158015610704573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107289190610cfb565b5050509150506402540be4008161073f9190610d76565b915050919050565b8280548282559060005260206000209081019282156107c0579160200282015b828111156107bf5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610767565b5b5090506107cd91906107d1565b5090565b5b808211156107ea5760008160009055506001016107d2565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061081e826107f3565b9050919050565b61082e81610813565b811461083957600080fd5b50565b60008135905061084b81610825565b92915050565b600060208284031215610867576108666107ee565b5b60006108758482850161083c565b91505092915050565b6000819050919050565b6108918161087e565b82525050565b60006020820190506108ac6000830184610888565b92915050565b6108bb81610813565b82525050565b60006020820190506108d660008301846108b2565b92915050565b6000819050919050565b60006109016108fc6108f7846107f3565b6108dc565b6107f3565b9050919050565b6000610913826108e6565b9050919050565b600061092582610908565b9050919050565b6109358161091a565b82525050565b6000602082019050610950600083018461092c565b92915050565b61095f8161087e565b811461096a57600080fd5b50565b60008135905061097c81610956565b92915050565b600060208284031215610998576109976107ee565b5b60006109a68482850161096d565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a188261087e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a4b57610a4a6109de565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610aa0600083610a85565b9150610aab82610a90565b600082019050919050565b6000610ac182610a93565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b12600b83610acb565b9150610b1d82610adc565b602082019050919050565b60006020820190508181036000830152610b4181610b05565b9050919050565b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b6000610b7e601283610acb565b9150610b8982610b48565b602082019050919050565b60006020820190508181036000830152610bad81610b71565b9050919050565b6000610bbf8261087e565b9150610bca8361087e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c0357610c026109de565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c488261087e565b9150610c538361087e565b925082610c6357610c62610c0e565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c8d81610c6e565b8114610c9857600080fd5b50565b600081519050610caa81610c84565b92915050565b6000819050919050565b610cc381610cb0565b8114610cce57600080fd5b50565b600081519050610ce081610cba565b92915050565b600081519050610cf581610956565b92915050565b600080600080600060a08688031215610d1757610d166107ee565b5b6000610d2588828901610c9b565b9550506020610d3688828901610cd1565b9450506040610d4788828901610ce6565b9350506060610d5888828901610ce6565b9250506080610d6988828901610c9b565b9150509295509295909350565b6000610d8182610cb0565b9150610d8c83610cb0565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610dcb57610dca6109de565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e0857610e076109de565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e4557610e446109de565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e8257610e816109de565b5b82820290509291505056fea26469706673582212205515c893f0fe4661bfac7e601b6f8eac9e0f6500fe2ef0ab585d45ab98bfaae564736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 67,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 72,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}