{
  "address": "0x6F6DcD6414F18Cc290A33e0E0BCc1c7af0bD5350",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xfa887e89fb4470a480edda16ff0c34ef742334ad614d75c85096927c22b2c393",
  "receipt": {
    "to": null,
    "from": "0x737B729C3E01508a726f831be577c683C5BB9B9D",
    "contractAddress": "0x6F6DcD6414F18Cc290A33e0E0BCc1c7af0bD5350",
    "transactionIndex": 0,
    "gasUsed": "854919",
    "logsBloom": "0x
    "blockHash": "0x068c359d4299f65a4243f4ec486f5fa08bf587c44aaf2e770c7c6fb286880072",
    "transactionHash": "0xfa887e89fb4470a480edda16ff0c34ef742334ad614d75c85096927c22b2c393",
    "logs": [],
    "blockNumber": 10938694,
    "cumulativeGasUsed": "854919",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 1,
  "solcInputHash": "6af455b2fa756f277b271992437cbffa",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.8;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MINIMUM_USD = 5 * 10**18;\\n\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n\\n    address public immutable i_owner;\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= MINIMUM_USD,\\n            \\\"Didn't send enough\\\"\\n        );\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // three ways to send eth\\n\\n        //TRANSFER\\n        //payable casts msg.sender to payable address\\n        // payable(msg.sender).transfer(address(this).balance);\\n        //if this line fails will revert transaction\\n\\n        //SEND\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // //will return false if fails, will not revert automatically.\\n\\n        //CALL\\n        (\\n            bool callSuccess, /*bytes memory dataReturned*/\\n\\n        ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        //low level funcs\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) {\\n            revert NotOwner();\\n        }\\n        _;\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0xeab6a10f6b709e75fe13c7b0eccc0eaddbc59ee8d7bf1533b23928f31a23758a\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.8;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n    function getPrice(AggregatorV3Interface priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\r\\n        //ETH in terms of usd - 8 decimals\\r\\n        return uint256(price * 1e10);\\r\\n    }\\r\\n\\r\\n    function getConversionRate(\\r\\n        uint256 ethAmount,\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xd740382c9d7a4bcab21c131803fae76669afb2a42a2b34f2969fffe0d7d101f0\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610f7b380380610f7b83398181016040528101906100329190610113565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610140565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e0826100b5565b9050919050565b6100f0816100d5565b81146100fb57600080fd5b50565b60008151905061010d816100e7565b92915050565b600060208284031215610129576101286100b0565b5b6000610137848285016100fe565b91505092915050565b60805160601c610e16610165600039600081816102d3015261055d0152610e166000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d1565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906107a4565b610511565b6040516100d891906107ea565b60405180910390f35b3480156100ed57600080fd5b506100f6610529565b60405161010391906107ea565b60405180910390f35b34801561011857600080fd5b50610121610535565b60405161012e9190610864565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b5061015661055b565b604051610163919061088e565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108d5565b61057f565b6040516101a0919061088e565b60405180910390f35b674563918244f400006101e7600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105be90919063ffffffff16565b1015610228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021f9061095f565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610356576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561040157600080828154811061037b5761037a61097f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103f9906109dd565b915050610359565b50600067ffffffffffffffff81111561041d5761041c610a26565b5b60405190808252806020026020018201604052801561044b5781602001602082028036833780820191505090505b506000908051906020019061046192919061069a565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161048890610a86565b60006040518083038185875af1925050503d80600081146104c5576040519150601f19603f3d011682016040523d82523d6000602084013e6104ca565b606091505b505090508061050e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050590610ae7565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b674563918244f4000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061058f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105ca836105fa565b90506000670de0b6b3a764000085836105e39190610b07565b6105ed9190610b90565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561064357600080fd5b505afa158015610657573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067b9190610c4e565b5050509150506402540be400816106929190610cc9565b915050919050565b828054828255906000526020600020908101928215610713579160200282015b828111156107125782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106ba565b5b5090506107209190610724565b5090565b5b8082111561073d576000816000905550600101610725565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061077182610746565b9050919050565b61078181610766565b811461078c57600080fd5b50565b60008135905061079e81610778565b92915050565b6000602082840312156107ba576107b9610741565b5b60006107c88482850161078f565b91505092915050565b6000819050919050565b6107e4816107d1565b82525050565b60006020820190506107ff60008301846107db565b92915050565b6000819050919050565b600061082a61082561082084610746565b610805565b610746565b9050919050565b600061083c8261080f565b9050919050565b600061084e82610831565b9050919050565b61085e81610843565b82525050565b60006020820190506108796000830184610855565b92915050565b61088881610766565b82525050565b60006020820190506108a3600083018461087f565b92915050565b6108b2816107d1565b81146108bd57600080fd5b50565b6000813590506108cf816108a9565b92915050565b6000602082840312156108eb576108ea610741565b5b60006108f9848285016108c0565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b6000610949601283610902565b915061095482610913565b602082019050919050565b600060208201905081810360008301526109788161093c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109e8826107d1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a1b57610a1a6109ae565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a70600083610a55565b9150610a7b82610a60565b600082019050919050565b6000610a9182610a63565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ad1600b83610902565b9150610adc82610a9b565b602082019050919050565b60006020820190508181036000830152610b0081610ac4565b9050919050565b6000610b12826107d1565b9150610b1d836107d1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b5657610b556109ae565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b9b826107d1565b9150610ba6836107d1565b925082610bb657610bb5610b61565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610be081610bc1565b8114610beb57600080fd5b50565b600081519050610bfd81610bd7565b92915050565b6000819050919050565b610c1681610c03565b8114610c2157600080fd5b50565b600081519050610c3381610c0d565b92915050565b600081519050610c48816108a9565b92915050565b600080600080600060a08688031215610c6a57610c69610741565b5b6000610c7888828901610bee565b9550506020610c8988828901610c24565b9450506040610c9a88828901610c39565b9350506060610cab88828901610c39565b9250506080610cbc88828901610bee565b9150509295509295909350565b6000610cd482610c03565b9150610cdf83610c03565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d1e57610d1d6109ae565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d5b57610d5a6109ae565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d9857610d976109ae565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610dd557610dd46109ae565b5b82820290509291505056fea26469706673582212209fc438296204e4c71f8e9c6624327f67470cf6bd31e898a1c1b3c6c52ac3cfad64736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d1565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906107a4565b610511565b6040516100d891906107ea565b60405180910390f35b3480156100ed57600080fd5b506100f6610529565b60405161010391906107ea565b60405180910390f35b34801561011857600080fd5b50610121610535565b60405161012e9190610864565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b5061015661055b565b604051610163919061088e565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108d5565b61057f565b6040516101a0919061088e565b60405180910390f35b674563918244f400006101e7600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105be90919063ffffffff16565b1015610228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021f9061095f565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610356576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561040157600080828154811061037b5761037a61097f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103f9906109dd565b915050610359565b50600067ffffffffffffffff81111561041d5761041c610a26565b5b60405190808252806020026020018201604052801561044b5781602001602082028036833780820191505090505b506000908051906020019061046192919061069a565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161048890610a86565b60006040518083038185875af1925050503d80600081146104c5576040519150601f19603f3d011682016040523d82523d6000602084013e6104ca565b606091505b505090508061050e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050590610ae7565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b674563918244f4000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061058f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105ca836105fa565b90506000670de0b6b3a764000085836105e39190610b07565b6105ed9190610b90565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561064357600080fd5b505afa158015610657573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067b9190610c4e565b5050509150506402540be400816106929190610cc9565b915050919050565b828054828255906000526020600020908101928215610713579160200282015b828111156107125782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106ba565b5b5090506107209190610724565b5090565b5b8082111561073d576000816000905550600101610725565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061077182610746565b9050919050565b61078181610766565b811461078c57600080fd5b50565b60008135905061079e81610778565b92915050565b6000602082840312156107ba576107b9610741565b5b60006107c88482850161078f565b91505092915050565b6000819050919050565b6107e4816107d1565b82525050565b60006020820190506107ff60008301846107db565b92915050565b6000819050919050565b600061082a61082561082084610746565b610805565b610746565b9050919050565b600061083c8261080f565b9050919050565b600061084e82610831565b9050919050565b61085e81610843565b82525050565b60006020820190506108796000830184610855565b92915050565b61088881610766565b82525050565b60006020820190506108a3600083018461087f565b92915050565b6108b2816107d1565b81146108bd57600080fd5b50565b6000813590506108cf816108a9565b92915050565b6000602082840312156108eb576108ea610741565b5b60006108f9848285016108c0565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b6000610949601283610902565b915061095482610913565b602082019050919050565b600060208201905081810360008301526109788161093c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109e8826107d1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a1b57610a1a6109ae565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a70600083610a55565b9150610a7b82610a60565b600082019050919050565b6000610a9182610a63565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ad1600b83610902565b9150610adc82610a9b565b602082019050919050565b60006020820190508181036000830152610b0081610ac4565b9050919050565b6000610b12826107d1565b9150610b1d836107d1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b5657610b556109ae565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b9b826107d1565b9150610ba6836107d1565b925082610bb657610bb5610b61565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610be081610bc1565b8114610beb57600080fd5b50565b600081519050610bfd81610bd7565b92915050565b6000819050919050565b610c1681610c03565b8114610c2157600080fd5b50565b600081519050610c3381610c0d565b92915050565b600081519050610c48816108a9565b92915050565b600080600080600060a08688031215610c6a57610c69610741565b5b6000610c7888828901610bee565b9550506020610c8988828901610c24565b9450506040610c9a88828901610c39565b9350506060610cab88828901610c39565b9250506080610cbc88828901610bee565b9150509295509295909350565b6000610cd482610c03565b9150610cdf83610c03565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d1e57610d1d6109ae565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d5b57610d5a6109ae565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d9857610d976109ae565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610dd557610dd46109ae565b5b82820290509291505056fea26469706673582212209fc438296204e4c71f8e9c6624327f67470cf6bd31e898a1c1b3c6c52ac3cfad64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 67,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 72,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}